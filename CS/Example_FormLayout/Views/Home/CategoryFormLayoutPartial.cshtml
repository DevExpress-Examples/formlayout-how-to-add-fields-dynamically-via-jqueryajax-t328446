@model Example_FormLayout.Models.Category

@Html.DevExpress().FormLayout(settings =>
{
    settings.Name = "FormLayout";
    settings.Items.Add(m => m.ID, item =>
    {
        item.Name = "Item1";
        item.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
        TextBoxSettings ts = item.NestedExtensionSettings as TextBoxSettings;
    });
    settings.Items.Add(m => m.Name, item =>
    {
        item.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
        TextBoxSettings ts = item.NestedExtensionSettings as TextBoxSettings;

    });
    settings.Items.Add(item =>
    {
        item.Caption = "";
        item.ShowCaption = DefaultBoolean.False;
        
        item.SetNestedContent(() =>
        {
            Html.DevExpress().Button(bs =>
            {
                bs.Name = "AddButton";
                bs.Text = "Add a product field";
                bs.ClientSideEvents.Click = String.Format("function(s,e) {{ AddProd(s,e,{0}); }}", Model.Products.Count - 1);
            }).Render();
        });

    });
    for (int i = 0; i < Model.Products.Count; i++)
    {
        settings.Items.Add(item =>
        {
            item.Caption = "Product " + i;
            var index = i;
            item.SetNestedContent(() =>
            {

                Html.DevExpress().ButtonEditFor(m => m.Products[index], bs =>
                {
                    bs.Properties.Buttons.Add("x");
                    bs.Properties.ClientSideEvents.ButtonClick = String.Format("function(s,e) {{ OnButtonClick(s,e,{0}); }}", index);
                }).Render();
            });
        });
    }

}).GetHtml()
